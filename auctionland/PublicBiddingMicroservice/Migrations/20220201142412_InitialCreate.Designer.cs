// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PublicBiddingMicroservice.Entities;

namespace PublicBiddingMicroservice.Migrations
{
    [DbContext(typeof(PublicBiddingContext))]
    [Migration("20220201142412_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PublicBiddingMicroservice.Entities.Auction", b =>
                {
                    b.Property<Guid>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApplicationDeadline")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<double>("PriceIncrease")
                        .HasColumnType("float");

                    b.Property<Guid?>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("AuctionId");

                    b.HasIndex("StageId");

                    b.ToTable("Auction");

                    b.HasData(
                        new
                        {
                            AuctionId = new Guid("4c7ea607-8ddb-493a-87fa-4bf5893e965b"),
                            ApplicationDeadline = new DateTime(2020, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2020, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Number = 1,
                            PriceIncrease = 10.0,
                            StageId = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e965b"),
                            Year = 2021
                        });
                });

            modelBuilder.Entity("PublicBiddingMicroservice.Entities.PublicBidding", b =>
                {
                    b.Property<Guid>("PublicBiddingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AuctionedPrice")
                        .HasColumnType("float");

                    b.Property<int>("Circle")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("DepositReplenishment")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Exclude")
                        .HasColumnType("bit");

                    b.Property<int>("LeasePeriod")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfParticipants")
                        .HasColumnType("int");

                    b.Property<Guid?>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("StartingPricePerHe")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublicBiddingId");

                    b.HasIndex("StageId");

                    b.ToTable("PublicBidding");

                    b.HasData(
                        new
                        {
                            PublicBiddingId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            AuctionedPrice = 139.0,
                            Circle = 1,
                            Date = new DateTime(2020, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DepositReplenishment = 13.0,
                            EndTime = new DateTime(2020, 11, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Exclude = true,
                            LeasePeriod = 1,
                            NumberOfParticipants = 12,
                            StageId = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e965b"),
                            StartTime = new DateTime(2020, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            StartingPricePerHe = 10.0,
                            Status = "Status1"
                        });
                });

            modelBuilder.Entity("PublicBiddingMicroservice.Entities.Stage", b =>
                {
                    b.Property<Guid>("StageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("StageId");

                    b.ToTable("Stage");

                    b.HasData(
                        new
                        {
                            StageId = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e965b"),
                            Date = new DateTime(2020, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PublicBiddingMicroservice.Entities.Auction", b =>
                {
                    b.HasOne("PublicBiddingMicroservice.Entities.Stage", "Stage")
                        .WithMany()
                        .HasForeignKey("StageId");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("PublicBiddingMicroservice.Entities.PublicBidding", b =>
                {
                    b.HasOne("PublicBiddingMicroservice.Entities.Stage", "Stage")
                        .WithMany()
                        .HasForeignKey("StageId");

                    b.Navigation("Stage");
                });
#pragma warning restore 612, 618
        }
    }
}
