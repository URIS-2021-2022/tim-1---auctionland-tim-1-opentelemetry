// <auto-generated />
using System;
using DocumentMicroservice.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DocumentMicroservice.Migrations
{
    [DbContext(typeof(DocumentContext))]
    partial class DocumentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DocumentMicroservice.Entities.Document", b =>
                {
                    b.Property<Guid>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DocumentDate")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("DocumentName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nvarchar(250)");

                    b.Property<int>("DocumentSerialNumber")
                        .HasColumnType("int")
                        .HasColumnName("int");

                    b.Property<DateTime>("DocumentSubmissionDate")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("DocumentTemplate")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nvarchar(250)");

                    b.Property<Guid>("ListOfDocumentsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DocumentId");

                    b.HasIndex("ListOfDocumentsID");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            DocumentId = new Guid("8b44e760-3c55-4ae4-8d1b-c4ea053672ff"),
                            DocumentDate = new DateTime(2008, 12, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentName = "First",
                            DocumentSerialNumber = 1,
                            DocumentSubmissionDate = new DateTime(2021, 12, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentTemplate = "FTemplate",
                            ListOfDocumentsID = new Guid("9791d7f8-ee0e-4426-9bdb-2600d8aa8975")
                        },
                        new
                        {
                            DocumentId = new Guid("300f7843-4343-4520-ac1c-995d8095ea89"),
                            DocumentDate = new DateTime(2020, 12, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentName = "Second",
                            DocumentSerialNumber = 2,
                            DocumentSubmissionDate = new DateTime(2008, 12, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentTemplate = "STemplate",
                            ListOfDocumentsID = new Guid("7297a3c3-5674-4537-9ce2-1319de481a27")
                        });
                });

            modelBuilder.Entity("DocumentMicroservice.Entities.LeaseAgreement", b =>
                {
                    b.Property<Guid>("LeaseAgreementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfSigning")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("datetime2")
                        .HasColumnName("datetime");

                    b.Property<DateTime>("DeadlineForLandRestitution")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("datetime2")
                        .HasColumnName("datetime");

                    b.Property<DateTime>("LeaseAgreementEntryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("datetime");

                    b.Property<DateTime>("LeaseAgreementMaturities")
                        .HasColumnType("datetime2")
                        .HasColumnName("datetime");

                    b.Property<string>("LeaseTypeOfGuarantee")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nvarchar(50)");

                    b.Property<Guid>("MinisterID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlaceOfSigning")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nvarchar(100)");

                    b.Property<Guid>("PublicBiddingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LeaseAgreementID");

                    b.ToTable("LeaseAgreements");

                    b.HasData(
                        new
                        {
                            LeaseAgreementID = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            DateOfSigning = new DateTime(2020, 11, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DeadlineForLandRestitution = new DateTime(2020, 11, 18, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaseAgreementEntryDate = new DateTime(2020, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaseAgreementMaturities = new DateTime(2020, 11, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaseTypeOfGuarantee = "FLease",
                            MinisterID = new Guid("02daa4a7-7602-44e1-a0f0-f2bfeeceef5e"),
                            PersonID = new Guid("20d61140-9027-494f-a544-0112c3ee0f57"),
                            PlaceOfSigning = "Some place",
                            PublicBiddingID = new Guid("f29575a1-37ce-4a94-998f-13e3119232fd")
                        },
                        new
                        {
                            LeaseAgreementID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e965b"),
                            DateOfSigning = new DateTime(2020, 11, 28, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DeadlineForLandRestitution = new DateTime(2020, 11, 23, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaseAgreementEntryDate = new DateTime(2020, 11, 13, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaseAgreementMaturities = new DateTime(2020, 11, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaseTypeOfGuarantee = "SLease",
                            MinisterID = new Guid("02daa4a7-7602-44e1-a0f0-f2bfeeceef5e"),
                            PersonID = new Guid("a4927ae1-52e0-4b8e-bcfc-9b353cb3a7e1"),
                            PlaceOfSigning = "Second place",
                            PublicBiddingID = new Guid("f29575a1-37ce-4a94-998f-13e3119232fd")
                        });
                });

            modelBuilder.Entity("DocumentMicroservice.Entities.ListOfDocuments", b =>
                {
                    b.Property<Guid>("ListOfDocumentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ListCreationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ListOfDocumentsId");

                    b.ToTable("ListOfDocuments");

                    b.HasData(
                        new
                        {
                            ListOfDocumentsId = new Guid("9791d7f8-ee0e-4426-9bdb-2600d8aa8975"),
                            ListCreationDate = new DateTime(2010, 11, 24, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ListOfDocumentsId = new Guid("7297a3c3-5674-4537-9ce2-1319de481a27"),
                            ListCreationDate = new DateTime(2008, 12, 20, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DocumentMicroservice.Entities.Document", b =>
                {
                    b.HasOne("DocumentMicroservice.Entities.ListOfDocuments", "ListOfDocuments")
                        .WithMany()
                        .HasForeignKey("ListOfDocumentsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListOfDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
