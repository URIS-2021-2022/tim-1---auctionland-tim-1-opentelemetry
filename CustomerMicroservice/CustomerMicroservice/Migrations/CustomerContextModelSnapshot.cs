// <auto-generated />
using System;
using CustomerMicroservice.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CustomerMicroservice.Migrations
{
    [DbContext(typeof(CustomerContext))]
    partial class CustomerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CustomerMicroservice.Entities.AuthorizedPerson", b =>
                {
                    b.Property<Guid>("AuthorizedPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BoardTable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberPersonalDocument")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorizedPersonID");

                    b.ToTable("AuthorizedPerson");

                    b.HasData(
                        new
                        {
                            AuthorizedPersonID = new Guid("4a151b19-a287-47f7-61bd-4a596c397461"),
                            AddressId = new Guid("2a151b12-a287-47f2-61bd-4a596c397461"),
                            BoardTable = "1",
                            FirstName = "Nikola",
                            LastName = "Nikolic",
                            NumberPersonalDocument = "012345788"
                        },
                        new
                        {
                            AuthorizedPersonID = new Guid("4b151b29-a287-47f7-61bd-2a596c397431"),
                            AddressId = new Guid("3a151b32-a287-47f3-61bd-4a596c397463"),
                            BoardTable = "2",
                            FirstName = "Nemanja",
                            LastName = "Nenadovic",
                            NumberPersonalDocument = "025445739"
                        });
                });

            modelBuilder.Entity("CustomerMicroservice.Entities.AuthorizedPersonCustomer", b =>
                {
                    b.Property<Guid>("AuthorizedPersonCustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorizedPersonID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuthorizedPersonCustomerID");

                    b.ToTable("AuthorizedPersonCustomer");

                    b.HasData(
                        new
                        {
                            AuthorizedPersonCustomerID = new Guid("5b151b29-a285-47f7-61bd-2a596c397425"),
                            AuthorizedPersonID = new Guid("4a151b19-a287-47f7-61bd-4a596c397461"),
                            CustomerID = new Guid("2a411c13-a196-48f7-88bd-67596c3974c3")
                        });
                });

            modelBuilder.Entity("CustomerMicroservice.Entities.LegallyPerson", b =>
                {
                    b.Property<Guid>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DurationBan")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDateBan")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasABan")
                        .HasColumnType("bit");

                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPhysicalPerson")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealizedArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateBan")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerID");

                    b.ToTable("LegallyPerson");

                    b.HasData(
                        new
                        {
                            CustomerID = new Guid("4a411c13-a196-48f7-88bd-67596c3974c4"),
                            AccountNumber = "3204568885231",
                            AddressId = new Guid("5b411c15-a196-48f7-88bd-67596c3974c5"),
                            DocumentID = new Guid("6a411c13-6196-48f7-88bd-57596c3974b6"),
                            DurationBan = 1,
                            Email = "context@info.com",
                            EndDateBan = new DateTime(2021, 11, 13, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Fax = "021352664",
                            HasABan = true,
                            IdentificationNumber = "325687964",
                            IsPhysicalPerson = false,
                            Name = "Context",
                            PhoneNumber1 = "066451235",
                            PhoneNumber2 = "0643214458",
                            Priority = "Visok",
                            RealizedArea = "38ha",
                            StartDateBan = new DateTime(2020, 11, 13, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CustomerMicroservice.Entities.PhysicalPerson", b =>
                {
                    b.Property<Guid>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DurationBan")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDateBan")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasABan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhysicalPerson")
                        .HasColumnType("bit");

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealizedArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateBan")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerID");

                    b.ToTable("PhysicalPerson");

                    b.HasData(
                        new
                        {
                            CustomerID = new Guid("2a411c13-a196-48f7-88bd-67596c3974c3"),
                            AccountNumber = "36105666854456",
                            AddressId = new Guid("1b411c11-a196-48f7-88bd-67596c3974c1"),
                            DocumentID = new Guid("3a411c13-a196-48f7-88bd-57596c3974b3"),
                            DurationBan = 3,
                            Email = "marko@gmail.com",
                            EndDateBan = new DateTime(2021, 10, 13, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marko",
                            HasABan = true,
                            IsPhysicalPerson = true,
                            JMBG = "1106985770036",
                            LastName = "Markovic",
                            PhoneNumber1 = "0652365574",
                            PhoneNumber2 = "0632456685",
                            Priority = "Nizak",
                            RealizedArea = "10ha",
                            StartDateBan = new DateTime(2018, 10, 13, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
